What happens when you initialize a repository? Why do you need to do it?
git init creates a repository. to store all the files we need the repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

you can remove files which you have accidentally added to the staging area by running the
git reset command

How can you use the staging area to make sure you have one commit per logical change?

by comparing it with the working directory using git diff command.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

When are you implementing a feature only for some users you can create that version in a new brach instead of modifying the version on the master branch. or when we are moving onto a different piece of work.

How do the diagrams help you visualize the branch structure?

we get to know the commits that are accessible from each branch and also the non accessible commits, also the order in which the commits were executed.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

Integrating the functionalities of both the branches together to one

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
